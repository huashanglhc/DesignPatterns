#!/usr/bin/env python
# -*- coding: UTF-8 -*-
"""
@Project ：DesignModel 
@File    ：state03.py
@Author  ：WL
@Date    ：2022/6/26 11:05 
@Describe: 状态模式

状态机：是一个抽象的机器，有两个关键的部分，状态和转换。状态是指系统的当状态。转换是指从一个状态切换到另一个状态，因为某个事件
        或条件触发。通常，在一次转换发生之前或之后会执行一个或一组动作。状态模式就是应用到一个特定软件工程问题的状态机。

实现：
        状态设计模式通常使用一个父State类和许多派生的ConcreteState类来实现，父类包含所有状态共同的功能，
    每个派生类则仅包含特定状态要求的功能。上下文context来提供交换状态的接口。在实现上，这个类需要包含一个指向状态的指针，
    每个状态需要知道下一个状态是什么，并且在触发之后达到哪种状态。

python 三方模式state_machine可实现状态机，pip3 install state_machine

应用：
    1. 可以使用状态机解决的问题都是不错的状态模式应用案例
    2. 事件驱动系统也是另一个例子。在一个事件驱动系统中，从一个状态转换到另一个状态会触发一个事件/消息。
    3. 在政府OA办公系统中，一个批文的状态有多种：尚未办理；正在办理；正在批示；正在审核；已经完成等各种状态，
    而且批文状态不同时对批文的操作也有所差异。使用状态模式可以描述工作流对象（如批文）的状态转换以及不同状态下它
    所具有的行为

"""
